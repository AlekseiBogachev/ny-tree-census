[
  {
    "objectID": "eda.html",
    "href": "eda.html",
    "title": "Исследовательский анализ датасета 2015 Street Tree Census - Tree Data",
    "section": "",
    "text": "Датасет содержит информацию о деревьях, растущих на улицах Нью-Йорка, собранную в рамках проекта 2015 Street Tree Census волонтёрами и сотрудниками NYC Parks & Recreation и партнёрских организаций.\nСобранные данные включают в себя информацию о видах деревьев, диаметре и оценку здоровья. Доступны сопроводительные данные, показывающие статус сбора и публикации данных по всему городу.\nПодробнее о датасете можно узнать на его сайте.\nДанный отчёт содержит исследовательский анализ данных, в том числе следующие пункты: - превью данных - таблица с небольшой выборкой из датасета, - оценка количества пропусков в столбцах с помощью библиотеки missingno, - диаграмма попарного распределения признаков, - матрица попарной корреляции между вещественными признаками, - карта расположения деревьев из датасета."
  },
  {
    "objectID": "eda.html#краткое-описание",
    "href": "eda.html#краткое-описание",
    "title": "Исследовательский анализ датасета 2015 Street Tree Census - Tree Data",
    "section": "",
    "text": "Датасет содержит информацию о деревьях, растущих на улицах Нью-Йорка, собранную в рамках проекта 2015 Street Tree Census волонтёрами и сотрудниками NYC Parks & Recreation и партнёрских организаций.\nСобранные данные включают в себя информацию о видах деревьев, диаметре и оценку здоровья. Доступны сопроводительные данные, показывающие статус сбора и публикации данных по всему городу.\nПодробнее о датасете можно узнать на его сайте.\nДанный отчёт содержит исследовательский анализ данных, в том числе следующие пункты: - превью данных - таблица с небольшой выборкой из датасета, - оценка количества пропусков в столбцах с помощью библиотеки missingno, - диаграмма попарного распределения признаков, - матрица попарной корреляции между вещественными признаками, - карта расположения деревьев из датасета."
  },
  {
    "objectID": "eda.html#описание-данных",
    "href": "eda.html#описание-данных",
    "title": "Исследовательский анализ датасета 2015 Street Tree Census - Tree Data",
    "section": "Описание данных",
    "text": "Описание данных\nВ следующей таблице приведено переведённое описание данных. Подробную информацию можно получить на сайте датасета.\n\n\n\n\n\n\n\n\n\n№\nНазвание столбца\nОписание\nТип данных\n\n\n\n\n1\ntree_id\nУникальный идентификатор каждого дерева.\nЧисло\n\n\n2\nblock_id\nИдентификатор, связывающий каждое дерево с блоком в таблице блоков/шейп-файле, в который оно отображается. (“Identifier linking each tree to the block in the blockface table/shapefile that it is mapped on.”)\nЧисло\n\n\n3\ncreated_at\nДата и вермя создания записи.\nДата и время (datetime)\n\n\n4\ntree_dbh\nДиаметр дерева, измеренный приблизительно в 137 см (54”) над землёй. Данные собраны как для мёртвых, так и для живых деревьев. Для пеньков используется признак stump_diam\nЧисло\n\n\n5\nstump_diam\nДиаметр пенька, измеренный через центр, округлённый до ближайшего целого. Диаметр измерен в дюймах.\nЧисло\n\n\n6\ncurb_loc\nРасположение грядки (клумбы, газона), в которой находится дерево, относительно бордюра; деревья располагаются либо вдоль бордюра (OnCurb), либо со смещением от бордюра (OffsetFromCurb).\nТекст\n\n\n7\nstatus\nСтатус, указывающий является ли дерево живым, стоящим мёртвым или пеньком.\nТекст\n\n\n8\nhealth\nОценка здоровья дерева пользователем.\nТекст\n\n\n9\nspc_latin\nНазвание вида на латыни, например “Acer rubrum”.\nТекст\n\n\n10\nspc_common\nОбывательское название вида, например “red maple”.\nТекст\n\n\n11\nsteward\nIndicates the number of unique signs of stewardship observed for this tree. Not recorded for stumps or dead trees.\nТекст\n\n\n12\nguards\nУказывает, присутствует ли ограждение (охрана?) и считает ли пользователь ее полезной или вредной. Для сухостойных деревьев и пней не отмечено.\nТекст\n\n\n13\nsidewalk\nУказывает, был ли один из краёв тротуара, непосредственно прилегающий к дереву, поврежден, треснут или поднят. Для сухостойных деревьев и пней не отмечено.\nТекст\n\n\n14\nuser_type\nПоле содержит категорию пользователя, внёсшего запись в данные.\nТекст\n\n\n15\nproblems\n\nТекст\n\n\n16\nroot_stone\nУказывает на наличие проблемы с корнями, вызванной брусчаткой на клумбе дерева.\nТекст\n\n\n17\nroot_grate\nУказывает на наличие проблемы с корнями, вызванной металлическими решетками на клумбе дерева\nТекст\n\n\n18\nroot_other\nУказывает на наличие других проблем с корнями.\nТекст\n\n\n19\ntrunk_wire\nУказывает на наличие проблемы со стволом дерева, вызванной проволокой или веревкой, обернутой вокруг ствола.\nТекст\n\n\n20\ntrnk_light\nУказывает на наличие проблемы со стволом, вызванной освещением, установленным на дереве.\nТекст\n\n\n21\ntrnk_other\nУказывает на другие проблемы со стволом.\nТекст\n\n\n22\nbrch_light\nУказывает на наличие проблемы с ветвями, вызванной освещением (обычно гирляндами) или проводами в ветвях.\nТекст\n\n\n23\nbrch_shoe\nУказывает на наличие проблемы с ветками, вызванной кроссовками в ветках.\nТекст\n\n\n24\nbrch_other\nУказывает на наличие других проблем с ветвями дерева.\nТекст\n\n\n25\naddress\nБлижайший предполагаемый адрес к дереву.\nТекст\n\n\n26\npostcode\nПочтовый индекс.\nЧисло\n\n\n27\nzip_city\nГород, полученный из почтового индекса. Часто (но не всегда) это то же самое, что и район.\nТекст\n\n\n28\ncb_num\nCommunity board in which tree point is located.\nЧисло\n\n\n29\nborocode\nКод района, в котором расположено дерево: 1 (Манхэттен), 2 (Бронкс), 3 (Бруклин), 4 (Куинс), 5 (Стейтен-Айленд).\nЧисло\n\n\n30\nboroname\nНазвание района, в котором расположено дерево.\nТекст\n\n\n31\ncncldist\nМуниципальный округ, в котором находится дерево\nЧисло\n\n\n32\nst_assem\nРайон Государственного собрания, в котором находится дерево. (State Assembly District in which tree point is located.)\nЧисло\n\n\n33\nst_senate\nРайон Сената штата, в котором находится дерево. (State Senate District in which tree point is located.)\nЧисло\n\n\n34\nnta\nКод NTA, соответствующий районов по данным переписи населения США 2010 года, в который попадает дерево. (This is the NTA Code corresponding to the neighborhood tabulation area from the 2010 US Census that the tree point falls into.)\nТекст\n\n\n35\nnta_name\nНазвание NTA, соответствующее району по данным переписи населения США 2010 года, в который попадает дерево. (This is the NTA name corresponding to the neighborhood tabulation area from the 2010 US Census that the tree point falls into.)\nТекст\n\n\n36\nboro_ct\nЭто идентификатор участка переписи, в который попадает дерево.\nЧисло\n\n\n37\nstate\nВсе строки меют одно и то же значение этого признака, равное “New York”.\nТекст\n\n\n38\nlatitude\nШирота\nЧисло\n\n\n39\nlongitude\nДолгота\nЧисло\n\n\n40\nx_sp\nКоордината X в Государственной плоской системе координат (SPCS), используемой в США. Единица измерения футы. (X coordinate, in state plane. Units are feet.)\nЧисло\n\n\n41\ny_sp\nКоордината Y в Государственной плоской системе координат (SPCS), используемой в США. Единица измерения футы. (Y coordinate, in state plane. Units are feet.)\nЧисло\n\n\n42\ncouncil_district\nМуниципальный округ.\nЧисло\n\n\n43\ncensus_tract\nПереписной участок\nЧисло\n\n\n44\nbin\n\nЧисло\n\n\n45\nbbl\n\nЧисло"
  },
  {
    "objectID": "eda.html#загрузка-данных",
    "href": "eda.html#загрузка-данных",
    "title": "Исследовательский анализ датасета 2015 Street Tree Census - Tree Data",
    "section": "Загрузка данных",
    "text": "Загрузка данных\nЗагрузка данных и их описания выполняется, если данные и описание не были загружены ранее.\nДанные загружаются с помощью SODA API.\n\n\nShow the code\n%%bash\nif [ ! -f ../../references/ny_tree_census_description.ptrees_problems ]; then\n    echo \"Загрузка описания датасета.\"\n    poetry run python ../../src/data/get_data.py get-description\n    echo \"Загрузка завершена. Подробнее в ../../logs/src.logs.logs.log\"\nelse\n    echo \"Описание датасета было загружено ранее.\"\nfi\n\n\nЗагрузка описания датасета.\n\n\n/dockeruser/.cache/pypoetry/virtualenvs/src-x7HGV2Ur-py3.11/bin/python: can't open file '/dockeruser/ny_tree_census/website/../../src/data/get_data.py': [Errno 2] No such file or directory\n\n\nЗагрузка завершена. Подробнее в ../../logs/src.logs.logs.log\n\n\n\n\nShow the code\n%%bash\nif [ ! -f /dockeruser/ny_tree_census/data/raw/data.csv ]; then\n    echo \"Загрузка датасета.\"\n    poetry run python ../../src/data/get_data.py get-data\n    echo \"Загрузка завершена. Подробнее в ../../logs/src.logs.logs.log\"\nelse\n    echo \"Датасет был загружен ранее.\"\nfi\n\n\nДатасет был загружен ранее."
  },
  {
    "objectID": "eda.html#анализ-данных",
    "href": "eda.html#анализ-данных",
    "title": "Исследовательский анализ датасета 2015 Street Tree Census - Tree Data",
    "section": "Анализ данных",
    "text": "Анализ данных\n\nИмпорт модулей\n\n\nShow the code\nimport matplotlib\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport pandas as pd\nfrom plotly import express as px\n\nfrom src.visualization import (\n    explore_cat_feature,\n    explore_cat_vs_cat,\n    explore_num_feature,\n    plot_corr_matrix,\n    review_data,\n)\n\n%matplotlib inline\n\n\n\n\nЗнакомство с данными\n\nВывод общей информации о датафрейме\nСчитаем загруженный ранее файл с датасетом и выведем общую информацию о нем.\n\n\nShow the code\ndataset: pd.DataFrame = pd.read_csv(\"/dockeruser/ny_tree_census/data/raw/data.csv\")\n\nreview_data(dataset)\n\n\nВ данных\nстрок: 683788\nстолбцов: 45\n\nПервые 10 строк таблицы:\n\n\n\n\n\n\n\n\n\ntree_id\nblock_id\ncreated_at\ntree_dbh\nstump_diam\ncurb_loc\nstatus\nhealth\nspc_latin\nspc_common\nsteward\nguards\nsidewalk\nuser_type\nproblems\nroot_stone\nroot_grate\nroot_other\ntrunk_wire\ntrnk_light\ntrnk_other\nbrch_light\nbrch_shoe\nbrch_other\naddress\nzipcode\nzip_city\ncb_num\nborocode\nboroname\ncncldist\nst_assem\nst_senate\nnta\nnta_name\nboro_ct\nstate\nlatitude\nlongitude\nx_sp\ny_sp\ncouncil_district\ncensus_tract\nbin\nbbl\n\n\n\n\n0\n3\n501451\n2015-05-19T00:00:00.000\n24\n0\nOnCurb\nAlive\nGood\nQuercus palustris\npin oak\n1or2\nNone\nDamage\nNYC Parks Staff\nNone\nNo\nNo\nNo\nNo\nNo\nNo\nNo\nNo\nNo\n766 MANIDA STREET\n10474\nBronx\n202\n2\nBronx\n17\n84\n32\nBX27\nHunts Point\n2009300\nNew York\n40.816467\n-73.889175\n1014925.946\n236757.4196\n17.0\n93.0\n2006497.0\n2.027630e+09\n\n\n1\n4\n501451\n2015-05-19T00:00:00.000\n20\n0\nOnCurb\nAlive\nGood\nQuercus palustris\npin oak\n1or2\nNone\nNoDamage\nNYC Parks Staff\nNone\nNo\nNo\nNo\nNo\nNo\nNo\nNo\nNo\nNo\n1241 LAFAYETTE AVENUE\n10474\nBronx\n202\n2\nBronx\n17\n84\n32\nBX27\nHunts Point\n2009300\nNew York\n40.816434\n-73.889595\n1014809.582\n236745.2369\n17.0\n93.0\n2006002.0\n2.027400e+09\n\n\n2\n7\n501911\n2015-05-19T00:00:00.000\n3\n0\nOnCurb\nAlive\nPoor\nBetula pendula\nsilver birch\n3or4\nNone\nNoDamage\nTreesCount Staff\nNone\nNo\nNo\nNo\nNo\nNo\nNo\nNo\nNo\nNo\n1242 SPOFFORD AVENUE\n10474\nBronx\n202\n2\nBronx\n17\n84\n34\nBX27\nHunts Point\n2009300\nNew York\n40.814092\n-73.889123\n1014941.504\n235892.2330\n17.0\n93.0\n2006623.0\n2.027650e+09\n\n\n3\n8\n501911\n2015-05-19T00:00:00.000\n3\n0\nOnCurb\nAlive\nPoor\nBetula pendula\nsilver birch\n3or4\nNone\nNoDamage\nTreesCount Staff\nNone\nNo\nNo\nNo\nNo\nNo\nNo\nNo\nNo\nNo\n1242 SPOFFORD AVENUE\n10474\nBronx\n202\n2\nBronx\n17\n84\n34\nBX27\nHunts Point\n2009300\nNew York\n40.814100\n-73.889070\n1014956.216\n235895.1546\n17.0\n93.0\n2006623.0\n2.027650e+09\n\n\n4\n9\n501911\n2015-05-19T00:00:00.000\n4\n0\nOnCurb\nAlive\nPoor\nBetula pendula\nsilver birch\n3or4\nNone\nNoDamage\nTreesCount Staff\nNone\nNo\nNo\nNo\nNo\nNo\nNo\nNo\nNo\nNo\n1242 SPOFFORD AVENUE\n10474\nBronx\n202\n2\nBronx\n17\n84\n34\nBX27\nHunts Point\n2009300\nNew York\n40.814107\n-73.889021\n1014969.752\n235897.8422\n17.0\n93.0\n2006623.0\n2.027650e+09\n\n\n5\n10\n501911\n2015-05-19T00:00:00.000\n4\n0\nOnCurb\nAlive\nGood\nTilia cordata\nlittleleaf linden\n3or4\nNone\nNoDamage\nTreesCount Staff\nNone\nNo\nNo\nNo\nNo\nNo\nNo\nNo\nNo\nNo\n1242 SPOFFORD AVENUE\n10474\nBronx\n202\n2\nBronx\n17\n84\n34\nBX27\nHunts Point\n2009300\nNew York\n40.814116\n-73.888965\n1014985.053\n235900.8809\n17.0\n93.0\n2006623.0\n2.027650e+09\n\n\n6\n11\n501911\n2015-05-19T00:00:00.000\n4\n0\nOnCurb\nAlive\nGood\nTilia cordata\nlittleleaf linden\n3or4\nNone\nNoDamage\nTreesCount Staff\nNone\nNo\nNo\nNo\nNo\nNo\nNo\nNo\nNo\nNo\n1246 SPOFFORD AVENUE\n10474\nBronx\n202\n2\nBronx\n17\n84\n34\nBX27\nHunts Point\n2009300\nNew York\n40.814124\n-73.888922\n1014997.010\n235903.8452\n17.0\n93.0\n2006624.0\n2.027650e+09\n\n\n7\n12\n501911\n2015-05-19T00:00:00.000\n4\n0\nOnCurb\nAlive\nGood\nTilia cordata\nlittleleaf linden\n3or4\nNone\nNoDamage\nTreesCount Staff\nNone\nNo\nNo\nNo\nNo\nNo\nNo\nNo\nNo\nNo\n1246 SPOFFORD AVENUE\n10474\nBronx\n202\n2\nBronx\n17\n84\n34\nBX27\nHunts Point\n2009300\nNew York\n40.814142\n-73.888847\n1015017.807\n235910.3816\n17.0\n93.0\n2006624.0\n2.027650e+09\n\n\n8\n13\n501911\n2015-05-19T00:00:00.000\n4\n0\nOnCurb\nAlive\nGood\nTilia cordata\nlittleleaf linden\n3or4\nNone\nNoDamage\nTreesCount Staff\nNone\nNo\nNo\nNo\nNo\nNo\nNo\nNo\nNo\nNo\n1246 SPOFFORD AVENUE\n10474\nBronx\n202\n2\nBronx\n17\n84\n32\nBX27\nHunts Point\n2009300\nNew York\n40.814163\n-73.888758\n1015042.420\n235918.1168\n17.0\n93.0\n2006624.0\n2.027650e+09\n\n\n9\n14\n501911\n2015-05-19T00:00:00.000\n3\n0\nOnCurb\nAlive\nGood\nGleditsia triacanthos var. inermis\nhoneylocust\n3or4\nNone\nNoDamage\nTreesCount Staff\nNone\nNo\nNo\nNo\nNo\nNo\nNo\nNo\nNo\nNo\n1246 SPOFFORD AVENUE\n10474\nBronx\n202\n2\nBronx\n17\n84\n32\nBX27\nHunts Point\n2009300\nNew York\n40.814193\n-73.888630\n1015077.847\n235929.0085\n17.0\n93.0\n2006624.0\n2.027650e+09\n\n\n\n\n\n\n\n\nОбщая информация о столбцах:\n&lt;class 'pandas.core.frame.DataFrame'&gt;\nRangeIndex: 683788 entries, 0 to 683787\nData columns (total 45 columns):\n #   Column            Non-Null Count   Dtype  \n---  ------            --------------   -----  \n 0   tree_id           683788 non-null  int64  \n 1   block_id          683788 non-null  int64  \n 2   created_at        683788 non-null  object \n 3   tree_dbh          683788 non-null  int64  \n 4   stump_diam        683788 non-null  int64  \n 5   curb_loc          683788 non-null  object \n 6   status            683788 non-null  object \n 7   health            652172 non-null  object \n 8   spc_latin         652169 non-null  object \n 9   spc_common        652169 non-null  object \n 10  steward           652173 non-null  object \n 11  guards            652172 non-null  object \n 12  sidewalk          652172 non-null  object \n 13  user_type         683788 non-null  object \n 14  problems          652124 non-null  object \n 15  root_stone        683788 non-null  object \n 16  root_grate        683788 non-null  object \n 17  root_other        683788 non-null  object \n 18  trunk_wire        683788 non-null  object \n 19  trnk_light        683788 non-null  object \n 20  trnk_other        683788 non-null  object \n 21  brch_light        683788 non-null  object \n 22  brch_shoe         683788 non-null  object \n 23  brch_other        683788 non-null  object \n 24  address           683788 non-null  object \n 25  zipcode           683788 non-null  int64  \n 26  zip_city          683788 non-null  object \n 27  cb_num            683788 non-null  int64  \n 28  borocode          683788 non-null  int64  \n 29  boroname          683788 non-null  object \n 30  cncldist          683788 non-null  int64  \n 31  st_assem          683788 non-null  int64  \n 32  st_senate         683788 non-null  int64  \n 33  nta               683788 non-null  object \n 34  nta_name          683788 non-null  object \n 35  boro_ct           683788 non-null  int64  \n 36  state             683788 non-null  object \n 37  latitude          683788 non-null  float64\n 38  longitude         683788 non-null  float64\n 39  x_sp              683788 non-null  float64\n 40  y_sp              683788 non-null  float64\n 41  council_district  677269 non-null  float64\n 42  census_tract      677269 non-null  float64\n 43  bin               674229 non-null  float64\n 44  bbl               674229 non-null  float64\ndtypes: float64(8), int64(11), object(26)\nmemory usage: 234.8+ MB\n\nДоля пропусков в каждом признаке:\n\n\ntree_id             0.00\nblock_id            0.00\ncreated_at          0.00\ntree_dbh            0.00\nstump_diam          0.00\ncurb_loc            0.00\nstatus              0.00\nhealth              0.05\nspc_latin           0.05\nspc_common          0.05\nsteward             0.05\nguards              0.05\nsidewalk            0.05\nuser_type           0.00\nproblems            0.05\nroot_stone          0.00\nroot_grate          0.00\nroot_other          0.00\ntrunk_wire          0.00\ntrnk_light          0.00\ntrnk_other          0.00\nbrch_light          0.00\nbrch_shoe           0.00\nbrch_other          0.00\naddress             0.00\nzipcode             0.00\nzip_city            0.00\ncb_num              0.00\nborocode            0.00\nboroname            0.00\ncncldist            0.00\nst_assem            0.00\nst_senate           0.00\nnta                 0.00\nnta_name            0.00\nboro_ct             0.00\nstate               0.00\nlatitude            0.00\nlongitude           0.00\nx_sp                0.00\ny_sp                0.00\ncouncil_district    0.01\ncensus_tract        0.01\nbin                 0.01\nbbl                 0.01\ndtype: float64\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nОписательные статистики для числовых признаков:\n\n\n\n\n\n\n\n\n\ncount\nmean\nstd\nmin\n10%\n25%\n50%\n75%\n90%\nmax\n\n\n\n\ntree_id\n683788.0\n3.652050e+05\n2.081221e+05\n3.000000e+00\n7.512770e+04\n1.865828e+05\n3.662145e+05\n5.461702e+05\n6.526333e+05\n7.226940e+05\n\n\nblock_id\n683788.0\n3.137931e+05\n1.148390e+05\n1.000020e+05\n2.006310e+05\n2.215560e+05\n3.199670e+05\n4.046240e+05\n5.038540e+05\n9.999990e+05\n\n\ntree_dbh\n683788.0\n1.127979e+01\n8.723042e+00\n0.000000e+00\n3.000000e+00\n4.000000e+00\n9.000000e+00\n1.600000e+01\n2.400000e+01\n4.500000e+02\n\n\nstump_diam\n683788.0\n4.324630e-01\n3.290241e+00\n0.000000e+00\n0.000000e+00\n0.000000e+00\n0.000000e+00\n0.000000e+00\n0.000000e+00\n1.400000e+02\n\n\nzipcode\n683788.0\n1.091625e+04\n6.515534e+02\n8.300000e+01\n1.030100e+04\n1.045100e+04\n1.121400e+04\n1.136500e+04\n1.142000e+04\n1.169700e+04\n\n\ncb_num\n683788.0\n3.435054e+02\n1.157406e+02\n1.010000e+02\n2.010000e+02\n3.020000e+02\n4.020000e+02\n4.120000e+02\n5.020000e+02\n5.030000e+02\n\n\nborocode\n683788.0\n3.358500e+00\n1.166746e+00\n1.000000e+00\n2.000000e+00\n3.000000e+00\n4.000000e+00\n4.000000e+00\n5.000000e+00\n5.000000e+00\n\n\ncncldist\n683788.0\n2.994318e+01\n1.432853e+01\n1.000000e+00\n1.000000e+01\n1.900000e+01\n3.000000e+01\n4.300000e+01\n5.000000e+01\n5.100000e+01\n\n\nst_assem\n683788.0\n5.079158e+01\n1.896652e+01\n2.300000e+01\n2.600000e+01\n3.300000e+01\n5.200000e+01\n6.400000e+01\n7.900000e+01\n8.700000e+01\n\n\nst_senate\n683788.0\n2.061578e+01\n7.390844e+00\n1.000000e+01\n1.100000e+01\n1.400000e+01\n2.100000e+01\n2.500000e+01\n3.200000e+01\n3.600000e+01\n\n\nboro_ct\n683788.0\n3.404914e+06\n1.175863e+06\n1.000201e+06\n2.002701e+06\n3.011700e+06\n4.008100e+06\n4.103202e+06\n5.014606e+06\n5.032300e+06\n\n\nlatitude\n683788.0\n4.070126e+01\n9.031136e-02\n4.049847e+01\n4.058196e+01\n4.063193e+01\n4.070061e+01\n4.076223e+01\n4.083069e+01\n4.091292e+01\n\n\nlongitude\n683788.0\n-7.392406e+01\n1.235835e-01\n-7.425496e+01\n-7.413196e+01\n-7.398050e+01\n-7.391291e+01\n-7.383491e+01\n-7.377011e+01\n-7.370049e+01\n\n\nx_sp\n683788.0\n1.005280e+06\n3.428505e+04\n9.133493e+05\n9.476079e+05\n9.896578e+05\n1.008386e+06\n1.029991e+06\n1.047987e+06\n1.067248e+06\n\n\ny_sp\n683788.0\n1.947984e+05\n3.290206e+04\n1.209738e+05\n1.513119e+05\n1.695152e+05\n1.945603e+05\n2.170196e+05\n2.419426e+05\n2.718941e+05\n\n\ncouncil_district\n677269.0\n3.002733e+01\n1.430172e+01\n1.000000e+00\n1.000000e+01\n1.900000e+01\n3.000000e+01\n4.300000e+01\n5.000000e+01\n5.100000e+01\n\n\ncensus_tract\n677269.0\n1.195737e+04\n3.074574e+04\n1.000000e+00\n8.800000e+01\n2.020000e+02\n5.160000e+02\n1.417000e+03\n3.030200e+04\n1.579030e+05\n\n\nbin\n674229.0\n3.495439e+06\n1.193275e+06\n1.000000e+06\n2.002847e+06\n3.031991e+06\n4.020352e+06\n4.263123e+06\n5.054225e+06\n5.515124e+06\n\n\nbbl\n674229.0\n3.413414e+09\n1.174892e+09\n0.000000e+00\n2.024360e+09\n3.011240e+09\n4.008560e+09\n4.105700e+09\n5.028820e+09\n5.080500e+09\n\n\n\n\n\n\n\nОписательные статистики для категориальных признаков:\n\n\n\n\n\n\n\n\n\ncount\nunique\ntop\nfreq\n\n\n\n\ncreated_at\n683788\n483\n2015-10-27T00:00:00.000\n6852\n\n\ncurb_loc\n683788\n2\nOnCurb\n656896\n\n\nstatus\n683788\n3\nAlive\n652173\n\n\nhealth\n652172\n3\nGood\n528850\n\n\nspc_latin\n652169\n132\nPlatanus x acerifolia\n87014\n\n\nspc_common\n652169\n132\nLondon planetree\n87014\n\n\nsteward\n652173\n4\nNone\n487823\n\n\nguards\n652172\n4\nNone\n572306\n\n\nsidewalk\n652172\n2\nNoDamage\n464978\n\n\nuser_type\n683788\n3\nTreesCount Staff\n296284\n\n\nproblems\n652124\n232\nNone\n426280\n\n\nroot_stone\n683788\n2\nNo\n543789\n\n\nroot_grate\n683788\n2\nNo\n680252\n\n\nroot_other\n683788\n2\nNo\n653466\n\n\ntrunk_wire\n683788\n2\nNo\n670514\n\n\ntrnk_light\n683788\n2\nNo\n682757\n\n\ntrnk_other\n683788\n2\nNo\n651215\n\n\nbrch_light\n683788\n2\nNo\n621423\n\n\nbrch_shoe\n683788\n2\nNo\n683377\n\n\nbrch_other\n683788\n2\nNo\n659433\n\n\naddress\n683788\n408701\n106 CROSS BAY BOULEVARD\n262\n\n\nzip_city\n683788\n48\nBrooklyn\n177300\n\n\nboroname\n683788\n5\nQueens\n250551\n\n\nnta\n683788\n188\nSI01\n12969\n\n\nnta_name\n683788\n188\nAnnadale-Huguenot-Prince's Bay-Eltingville\n12969\n\n\nstate\n683788\n1\nNew York\n683788\n\n\n\n\n\n\n\n\nДубликаты не обнаружены.\n\n\n\n\nВыводы\nДатасет не содержит дубликатов, но содержит пропуски. Пропуски не должны быть проблемой на этапе исследовательского анализа, однако их придётся обработать, прежде чем передать данные модели машинного обучения, если это будет необходимо.\nПропуски содержатся в следующих столбцах: - health - 5%; - spc_latin - 5%; - spc_common - 5%; - steward - 5%; - guards - 5%; - sidewalk - 5%; - problems - 5%; - council_district - 1%; - census_tract - 1%; - bin - 1%; - bbl - 1%;\nПризнаки tree_id, block_id, created_at содержат уникальный идентификатор дерева, уникальный идентификатор блока и дату создания записи. Не будем их рассматривать, по крайней мере, по началу.\nНе имеет смысла исследовать признак state, так как данный столбце целиком заполенен значением “New York”.\nДатасет содержит как категориальные, так и количественные признаки.\nК количественным признакам относятся следующие: - tree_dbh;\n- stump_diam;\n- latitude; - longitude; - x_sp; - y_sp; - bin; - bbl.\nCледующие признаки, хоть и были прочитаны с типом int64, с точки зрения своего физического смысла, являют категориальными: - zipcode;\n- cb_num;\n- borocode; - cncldist;\n- st_assem;\n- st_senate; - boro_ct; - council_district; - census_tract.\nК категориальным признакам также относятся признаки - curb_loc; - status; - health; - spc_latin; - spc_common; - steward; - guards; - sidewalk; - user_type; - problems; - root_stone; - root_grate; - root_other; - trunk_wire; - trnk_light; - trnk_other; - brch_light; - brch_shoe; - brch_other; - address; - zip_city; - boroname; - nta; - nta_name; - state.\nМногие категориальные признаки имеют высокую кардинальность.\nПодсчитаем количество уникальных значений для категориальных признаков, которые изначально были распознаны как количественные.\n\n\nShow the code\ncolumns = [\n    \"zipcode\",\n    \"cb_num\",\n    \"borocode\",\n    \"cncldist\",\n    \"st_assem\",\n    \"st_senate\",\n    \"boro_ct\",\n    \"council_district\",\n    \"census_tract\",\n]\n\npd.DataFrame(\n    dataset[columns].nunique(), columns=[\"Количество уникальных значений\"]\n)\n\n\n\n\n\n\n\n\n\nКоличество уникальных значений\n\n\n\n\nzipcode\n191\n\n\ncb_num\n59\n\n\nborocode\n5\n\n\ncncldist\n51\n\n\nst_assem\n65\n\n\nst_senate\n26\n\n\nboro_ct\n2152\n\n\ncouncil_district\n51\n\n\ncensus_tract\n1315\n\n\n\n\n\n\n\nТаким образом, среди категориальных признаков мы можем исследовать с помощью графиков следующие: - curb_loc; - status; - health; - steward; - guards; - sidewalk; - user_type; - root_stone; - root_grate; - root_other; - trunk_wire; - trnk_light; - trnk_other; - brch_light; - brch_shoe; - brch_other; - zip_city; - boroname; - cb_num; - borocode; - cncldist; - st_senate; - council_district.\n\n\n\nИсследование отдельных признаков\n\nКоличественные признаки\nК количественным признакам отнесём следующие: - tree_dbh;\n- stump_diam;\n- latitude; - longitude; - x_sp; - y_sp; - bin; - bbl.\nРассмотрим их распределения.\n\ntree_dbh\nПризнак содержит диаметр дерева в, измеренный приблизительно в 137 см (54”) над землёй.\n\n\nShow the code\nexplore_num_feature(\n    data=dataset,\n    column_name=\"tree_dbh\",\n    bins=51,\n)\n\n\nПризнак tree_dbh\nКоличество пропусков: 0\n\nОписательные статистики:\n\n\n\n\n\n\n\n\n\ntree_dbh\n\n\n\n\ncount\n683788.000000\n\n\nmean\n11.279787\n\n\nstd\n8.723042\n\n\nmin\n0.000000\n\n\n10%\n3.000000\n\n\n25%\n4.000000\n\n\n50%\n9.000000\n\n\n75%\n16.000000\n\n\n90%\n24.000000\n\n\nmax\n450.000000\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nФорма распределения значений признака значительно отклоняется от формы нормального. Распределение имеет тяжёлый хвост и большое количество выбросов в большую сторону.\nПризнак может быть строго равен нулю. Скорее всего, значение данного признака равно нулю для пеньков. Согласно описанию данных диаметр пеньков заносится в признак stump_diam.\nРассмотрим распределение значений данного признак в диапазоне 0 &lt; tree_dbh &lt;= 100 более подробно.\n\n\nShow the code\nexplore_num_feature(\n    data=dataset.query(\"tree_dbh &gt; 0 and tree_dbh &lt;=100\"),\n    column_name=\"tree_dbh\",\n    bins=51,\n)\n\n\nПризнак tree_dbh\nКоличество пропусков: 0\n\nОписательные статистики:\n\n\n\n\n\n\n\n\n\ntree_dbh\n\n\n\n\ncount\n665786.000000\n\n\nmean\n11.565285\n\n\nstd\n8.416264\n\n\nmin\n1.000000\n\n\n10%\n3.000000\n\n\n25%\n5.000000\n\n\n50%\n10.000000\n\n\n75%\n16.000000\n\n\n90%\n24.000000\n\n\nmax\n100.000000\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nstump_diam\nДиаметр пенька, измеренный через центр, в дюймах.\n\n\nShow the code\nexplore_num_feature(\n    data=dataset,\n    column_name=\"stump_diam\",\n)\n\n\nПризнак stump_diam\nКоличество пропусков: 0\n\nОписательные статистики:\n\n\n\n\n\n\n\n\n\nstump_diam\n\n\n\n\ncount\n683788.000000\n\n\nmean\n0.432463\n\n\nstd\n3.290241\n\n\nmin\n0.000000\n\n\n10%\n0.000000\n\n\n25%\n0.000000\n\n\n50%\n0.000000\n\n\n75%\n0.000000\n\n\n90%\n0.000000\n\n\nmax\n140.000000\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nВ датасете большинство наблюдений относится к деревьям, а не к пенькам, поэтому данный признак содержит абсолютное большинство нулей. Диаметр стволов деревьев заносится в признак tree_dbh.\nВыберем только те записи, где диаметр пенька строго больше нуля и меньше или равен 100 и рассмотрим распределение диаметров повторно.\n\n\nShow the code\nexplore_num_feature(\n    data=dataset.query(\"stump_diam &gt; 0 and stump_diam &lt;= 100\"),\n    column_name=\"stump_diam\",\n    bins=51,\n)\n\n\nПризнак stump_diam\nКоличество пропусков: 0\n\nОписательные статистики:\n\n\n\n\n\n\n\n\n\nstump_diam\n\n\n\n\ncount\n17644.000000\n\n\nmean\n16.691793\n\n\nstd\n11.828303\n\n\nmin\n1.000000\n\n\n10%\n4.000000\n\n\n25%\n7.000000\n\n\n50%\n14.000000\n\n\n75%\n23.000000\n\n\n90%\n33.000000\n\n\nmax\n100.000000\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nФорма распределения значений признака значительно отклоняется от формы нормального. Распределение имеет тяжёлый хвост и большое количество выбросов в большую сторону.\nФорма распределения значений диаметров пеньков напоминает форму распределения значений диаметров стволов tree_dbh, что закономерно.\nТаким образом, признаки tree_dbh и stump_diam стоить попробовать объединить в один признак diam и рассматривать совместно.\n\n\nlatitude\nШирота точки в которой расположено дерево на карте.\n\n\nShow the code\nexplore_num_feature(\n    data=dataset,\n    column_name=\"latitude\",\n)\n\n\nПризнак latitude\nКоличество пропусков: 0\n\nОписательные статистики:\n\n\n\n\n\n\n\n\n\nlatitude\n\n\n\n\ncount\n683788.000000\n\n\nmean\n40.701261\n\n\nstd\n0.090311\n\n\nmin\n40.498466\n\n\n10%\n40.581956\n\n\n25%\n40.631928\n\n\n50%\n40.700612\n\n\n75%\n40.762228\n\n\n90%\n40.830693\n\n\nmax\n40.912918\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nФорма распределения близка к форме нормального распределения, но имеет несколько мод, которые могут соответствовать центрам “кластеров” деревьев.\nПозже мы рассмотрим распределение точек одновременно по признаку latitude и признаку longitude, а также нанесём точки с деревьями на карту, что позволит понять причину появления нескольких мод.\n\n\nlongitude\nДолгота точки в которой расположено дерево на карте.\n\n\nShow the code\nexplore_num_feature(\n    data=dataset,\n    column_name=\"longitude\",\n)\n\n\nПризнак longitude\nКоличество пропусков: 0\n\nОписательные статистики:\n\n\n\n\n\n\n\n\n\nlongitude\n\n\n\n\ncount\n683788.000000\n\n\nmean\n-73.924060\n\n\nstd\n0.123583\n\n\nmin\n-74.254965\n\n\n10%\n-74.131957\n\n\n25%\n-73.980500\n\n\n50%\n-73.912911\n\n\n75%\n-73.834910\n\n\n90%\n-73.770112\n\n\nmax\n-73.700488\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nФорма распределения значительно отличается от формы нормального распределения. Распределение имеет как минимум две моды.\nПозже мы рассмотрим распределение записей одновременно по признаку latitude и признаку longitude, а также нанесём точки с деревьями на карту, что позволит понять причину появления нескольких мод.\n\n\nx_sp\nКоордината X в Государственной плоской системе координат (SPCS), используемой в США. Единица измерения футы.\n\n\nShow the code\nexplore_num_feature(data=dataset, column_name=\"x_sp\")\n\n\nПризнак x_sp\nКоличество пропусков: 0\n\nОписательные статистики:\n\n\n\n\n\n\n\n\n\nx_sp\n\n\n\n\ncount\n6.837880e+05\n\n\nmean\n1.005280e+06\n\n\nstd\n3.428505e+04\n\n\nmin\n9.133493e+05\n\n\n10%\n9.476079e+05\n\n\n25%\n9.896578e+05\n\n\n50%\n1.008386e+06\n\n\n75%\n1.029991e+06\n\n\n90%\n1.047987e+06\n\n\nmax\n1.067248e+06\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nРаспределение повторяет распределение признака longitude.\n\n\ny_sp\nКоордината Y в Государственной плоской системе координат (SPCS), используемой в США. Единица измерения футы.\n\n\nShow the code\nexplore_num_feature(data=dataset, column_name=\"y_sp\")\n\n\nПризнак y_sp\nКоличество пропусков: 0\n\nОписательные статистики:\n\n\n\n\n\n\n\n\n\ny_sp\n\n\n\n\ncount\n683788.000000\n\n\nmean\n194798.424625\n\n\nstd\n32902.061114\n\n\nmin\n120973.792200\n\n\n10%\n151311.945170\n\n\n25%\n169515.153700\n\n\n50%\n194560.252500\n\n\n75%\n217019.571950\n\n\n90%\n241942.646120\n\n\nmax\n271894.092100\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nРаспределение повторяет распределение признака latitude.\n\n\nbin и bbl\nВ описании датасета отсутствуют комментарии для этих признаков, но они были распознаны как количественные.\nРассмотрим их распределения.\n\n\nShow the code\nexplore_num_feature(data=dataset, column_name=\"bin\")\n\nexplore_num_feature(data=dataset, column_name=\"bbl\")\n\n\nПризнак bin\nКоличество пропусков: 9559\n\nОписательные статистики:\n\n\n\n\n\n\n\n\n\nbin\n\n\n\n\ncount\n6.742290e+05\n\n\nmean\n3.495439e+06\n\n\nstd\n1.193275e+06\n\n\nmin\n1.000000e+06\n\n\n10%\n2.002847e+06\n\n\n25%\n3.031991e+06\n\n\n50%\n4.020352e+06\n\n\n75%\n4.263123e+06\n\n\n90%\n5.054225e+06\n\n\nmax\n5.515124e+06\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nПризнак bbl\nКоличество пропусков: 9559\n\nОписательные статистики:\n\n\n\n\n\n\n\n\n\nbbl\n\n\n\n\ncount\n6.742290e+05\n\n\nmean\n3.413414e+09\n\n\nstd\n1.174892e+09\n\n\nmin\n0.000000e+00\n\n\n10%\n2.024360e+09\n\n\n25%\n3.011240e+09\n\n\n50%\n4.008560e+09\n\n\n75%\n4.105700e+09\n\n\n90%\n5.028820e+09\n\n\nmax\n5.080500e+09\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nСудя по гистограммам, признаки являются категориальными, подсчитаем количество уникальных значений для каждого из них.\n\n\nShow the code\npd.DataFrame(\n    dataset[[\"bin\", \"bbl\"]].nunique(),\n    columns=[\"Количество уникальных значений\"],\n)\n\n\n\n\n\n\n\n\n\nКоличество уникальных значений\n\n\n\n\nbin\n378888\n\n\nbbl\n366635\n\n\n\n\n\n\n\nВыведем несколько значений этих признаков.\n\n\nShow the code\ndataset[[\"bin\", \"bbl\"]].sample(10)\n\n\n\n\n\n\n\n\n\nbin\nbbl\n\n\n\n\n156823\n4298655.0\n4.155830e+09\n\n\n309944\n5004053.0\n5.001500e+09\n\n\n241837\n4117336.0\n4.051960e+09\n\n\n174391\n1082192.0\n1.014128e+09\n\n\n399038\n3092977.0\n3.041500e+09\n\n\n662626\n3107801.0\n3.048420e+09\n\n\n368531\n5127211.0\n5.055930e+09\n\n\n537786\n4284080.0\n4.132110e+09\n\n\n277572\n5065437.0\n5.051280e+09\n\n\n637485\n3046535.0\n3.016660e+09\n\n\n\n\n\n\n\nПохоже, что данные признаки содержат какие-то коды или координаты с большим количеством уникальных значений.\n\n\ncreated_at\nРассмотрим признак created_at, содержащий дату и время создания записи. Подсчитаем количество записей созданных в\n\n\nShow the code\n(\n    dataset.assign(created_at=lambda row: pd.to_datetime(row.created_at))\n    .loc[:, [\"created_at\", \"tree_id\"]]\n    .resample(\"MS\", on=\"created_at\")\n    .count()\n    .rename(columns={\"tree_id\": \"count\"})\n    .reset_index()\n    .assign(created_at=lambda row: row.created_at.dt.date)\n    .plot(\n        kind=\"bar\",\n        x=\"created_at\",\n        y=\"count\",\n        title=\"Количество записей внесённых в разное время\",\n    )\n)\n\nplt.show()\n\n\n\n\n\n\n\n\n\nБольше всего записей было внесено в октябре 2015, самая низкая активность участников проекта наблюдалась в период с января 2016 по апрель 2016.\n\n\n\nКатегориальные признаки\nСреди категориальных признаков мы можем исследовать с помощью графиков следующие: - curb_loc; - status; - health; - steward; - guards; - sidewalk; - user_type; - root_stone; - root_grate; - root_other; - trunk_wire; - trnk_light; - trnk_other; - brch_light; - brch_shoe; - brch_other; - zip_city; - boroname; - cb_num; - borocode; - cncldist; - st_senate; - council_district.\n\ncurb_loc\nРассмотрим категориальный признак curb_loc, содержащий информацию о расположении грядки (клумбы, газона), в которой находится дерево, относительно бордюра; деревья располагаются либо вдоль бордюра (OnCurb), либо со смещением от бордюра (OffsetFromCurb).\n\n\nShow the code\nexplore_cat_feature(\n    data=dataset,\n    column_name=\"curb_loc\",\n    title=\"Расположение клумбы относительно бордюра\",\n    xlabel=\"Количество наблюдений\",\n    ylabel=\"Расположение клумбы\",\n)\n\n\nКоличество уникальных знаний: 2\nКоличество повторов уникальных значений признака curb_loc\n\n\n\n\n\n\n\n\n\nЗначение признака curb_loc\nКоличество повторений\n\n\n\n\n0\nOnCurb\n656896\n\n\n1\nOffsetFromCurb\n26892\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nБольшинство деревьев (клумб) расположены вдоль бордюра.\n\n\nstatus\nРассмотрим категориальный признак status - статус, указывающий является ли дерево живым, стоящим мёртвым или пеньком.\n\n\nShow the code\nexplore_cat_feature(\n    data=dataset,\n    column_name=\"status\",\n    title=\"Статус дерева\\n(живое / мёртвое / пенёк)\",\n    xlabel=\"Количество наблюдений\",\n    ylabel=\"Статус\",\n)\n\n\nКоличество уникальных знаний: 3\nКоличество повторов уникальных значений признака status\n\n\n\n\n\n\n\n\n\nЗначение признака status\nКоличество повторений\n\n\n\n\n0\nAlive\n652173\n\n\n1\nStump\n17654\n\n\n2\nDead\n13961\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nВ датасете очень мало пеньков и мёртвых деревьев.\n\n\nhealth\nРассмотрим категориальный признак health, содержащий оценку здоровья дерева пользователем.\n\n\nShow the code\nexplore_cat_feature(\n    data=dataset,\n    column_name=\"health\",\n    title=\"Оценка здоровья дерева\",\n    xlabel=\"Количество наблюдений\",\n    ylabel=\"Оценка\",\n)\n\n\nКоличество уникальных знаний: 3\nКоличество повторов уникальных значений признака health\n\n\n\n\n\n\n\n\n\nЗначение признака health\nКоличество повторений\n\n\n\n\n0\nGood\n528850\n\n\n1\nFair\n96504\n\n\n2\nNaN\n31616\n\n\n3\nPoor\n26818\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nСостояние большинства деревьев оценено как хорошее, при этом признак, содержит некоторое количество пропусков. Вполне возможно, что эти пропуски соответствуют пенькам и мёртвым деревьям. Чтобы проверить эти гипотезу подсчитаем для каждого статуса дерева количество каждого значения признака health.\n\n\nShow the code\ndataset.groupby(\"status\")[\"health\"].value_counts(dropna=False)\n\n\nstatus  health\nAlive   Good      528850\n        Fair       96504\n        Poor       26818\n        NaN            1\nDead    NaN        13961\nStump   NaN        17654\nName: health, dtype: int64\n\n\nДля живых деревьев признак health содержит пропущенное значение только в одном случае, все остальные пропуски соответствуют пням и мёртвым деревьям.\n\n\nsteward\nРассмотрим категориальный признак steward. Согласно описанию, содержит пропущенные значения для пней и мёртвых деревьев.\n\n\nShow the code\nexplore_cat_feature(\n    data=dataset,\n    column_name=\"steward\",\n    title=\"Steward\",\n    xlabel=\"Количество наблюдений\",\n)\n\n\nКоличество уникальных знаний: 4\nКоличество повторов уникальных значений признака steward\n\n\n\n\n\n\n\n\n\nЗначение признака steward\nКоличество повторений\n\n\n\n\n0\nNone\n487823\n\n\n1\n1or2\n143557\n\n\n2\nNaN\n31615\n\n\n3\n3or4\n19183\n\n\n4\n4orMore\n1610\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nПризнак можно рассматривать как ранговый и перекодировать целыми числами.\n\n\nguards\nРассмотрим категориальный признак guards, содержащий информацию об ограждении вокруг дерева. Согласно описанию, признак содержит пропущенные значения для пней и мёртвых деревьев.\n\n\nShow the code\nexplore_cat_feature(\n    data=dataset,\n    column_name=\"guards\",\n    title=\"Ограждения\",\n    xlabel=\"Количество наблюдений\",\n)\n\n\nКоличество уникальных знаний: 4\nКоличество повторов уникальных значений признака guards\n\n\n\n\n\n\n\n\n\nЗначение признака guards\nКоличество повторений\n\n\n\n\n0\nNone\n572306\n\n\n1\nHelpful\n51866\n\n\n2\nNaN\n31616\n\n\n3\nHarmful\n20252\n\n\n4\nUnsure\n7748\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nУ большинства деревьев ограждения отсутствуют.\n\n\nsidewalk\nРассмотрим категориальный признак sidewalk, который указывает, был ли один из краёв тротуара, непосредственно прилегающий к дереву, поврежден, треснут или поднят. Согласно описанию, признак содержит пропущенные значения для пней и мёртвых деревьев.\n\n\nShow the code\nexplore_cat_feature(\n    data=dataset,\n    column_name=\"sidewalk\",\n    title=\"sidewalk\\n(состояние края тротуара)\",\n    xlabel=\"Количество наблюдений\",\n    ylabel=\"sidewalk\",\n)\n\n\nКоличество уникальных знаний: 2\nКоличество повторов уникальных значений признака sidewalk\n\n\n\n\n\n\n\n\n\nЗначение признака sidewalk\nКоличество повторений\n\n\n\n\n0\nNoDamage\n464978\n\n\n1\nDamage\n187194\n\n\n2\nNaN\n31616\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nuser_type\nРассмотрим категориальный признак user_type, который содержит категорию пользователя, внёсшего запись в данные.\n\n\nShow the code\nexplore_cat_feature(\n    data=dataset,\n    column_name=\"user_type\",\n    title=\"Категории пользователей,\\nвнёсших данные\",\n    xlabel=\"Количество наблюдений\",\n    ylabel=\"Категория пользователя\",\n)\n\n\nКоличество уникальных знаний: 3\nКоличество повторов уникальных значений признака user_type\n\n\n\n\n\n\n\n\n\nЗначение признака user_type\nКоличество повторений\n\n\n\n\n0\nTreesCount Staff\n296284\n\n\n1\nVolunteer\n217518\n\n\n2\nNYC Parks Staff\n169986\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nПримечательно, что существенная часть данных добавлена волотнёрами.\n\n\nroot_stone\nРассмотрим категориальный признак root_stone, который указывает на наличие проблемы с корнями, вызванной брусчаткой на клумбе дерева.\n\n\nShow the code\nexplore_cat_feature(\n    data=dataset,\n    column_name=\"root_stone\",\n    title=\"Проблемы с корнями\\nиз-за брусчатки на клумбе\",\n    xlabel=\"Количество наблюдений\",\n    ylabel=\"Наличие проблемы\",\n)\n\n\nКоличество уникальных знаний: 2\nКоличество повторов уникальных значений признака root_stone\n\n\n\n\n\n\n\n\n\nЗначение признака root_stone\nКоличество повторений\n\n\n\n\n0\nNo\n543789\n\n\n1\nYes\n139999\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nУ большинства деревьев нет проблем с брусчаткой. Видимо, признак также указан и для пней и для мёртвых деревьев.\n\n\nroot_grate\nРассмотрим категориальный признак root_grate, который указывает на наличие проблемы с корнями, вызванной металлическими решетками на клумбе дерева.\n\n\nShow the code\nexplore_cat_feature(\n    data=dataset,\n    column_name=\"root_grate\",\n    title=\"Проблемы с корнями\\nиз-за решёток на клумбе\",\n    xlabel=\"Количество наблюдений\",\n    ylabel=\"Наличие проблемы\",\n)\n\n\nКоличество уникальных знаний: 2\nКоличество повторов уникальных значений признака root_grate\n\n\n\n\n\n\n\n\n\nЗначение признака root_grate\nКоличество повторений\n\n\n\n\n0\nNo\n680252\n\n\n1\nYes\n3536\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nПроблемы, вызванные решётками встречаются очень редко. Похоже, признак также указан для пней и мёртвых деревьев.\n\n\nroot_other\nРассмотрим категориальный признак root_other, Который указывает на наличие других проблем с корнями.\n\n\nShow the code\nexplore_cat_feature(\n    data=dataset,\n    column_name=\"root_other\",\n    title=\"Другие проблемы с корнями\",\n    xlabel=\"Количество наблюдений\",\n    ylabel=\"Наличие проблемы\",\n)\n\n\nКоличество уникальных знаний: 2\nКоличество повторов уникальных значений признака root_other\n\n\n\n\n\n\n\n\n\nЗначение признака root_other\nКоличество повторений\n\n\n\n\n0\nNo\n653466\n\n\n1\nYes\n30322\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nУ большинства деревьев нет проблем данной категории. Видимо, признак также указан и для пней и для мёртвых деревьев.\n\n\ntrunk_wire\nРассмотрим категориальный признак trunk_wire, который указывает на наличие проблем со стволом дерева, вызванной проволокой или веревкой, обернутой вокруг ствола.\n\n\nShow the code\nexplore_cat_feature(\n    data=dataset,\n    column_name=\"trunk_wire\",\n    title=\"Проблемы со стволом\\nиз-за проволоки или верёвки\",\n    xlabel=\"Количество наблюдений\",\n    ylabel=\"Наличие проблемы\",\n)\n\n\nКоличество уникальных знаний: 2\nКоличество повторов уникальных значений признака trunk_wire\n\n\n\n\n\n\n\n\n\nЗначение признака trunk_wire\nКоличество повторений\n\n\n\n\n0\nNo\n670514\n\n\n1\nYes\n13274\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nПроблема встречается крайне редко. Похоже, признак также указан для пней и мёртвых деревьев.\n\n\ntrnk_light\nРассмотрим категориальный признак trnk_light, который указывает на наличие проблем со стволом дерева, вызванной освещением, установленным на дереве.\n\n\nShow the code\nexplore_cat_feature(\n    data=dataset,\n    column_name=\"trnk_light\",\n    title=\"Проблемы со стволом\\nиз-за освещения\",\n    xlabel=\"Количество наблюдений\",\n    ylabel=\"Наличие проблемы\",\n)\n\n\nКоличество уникальных знаний: 2\nКоличество повторов уникальных значений признака trnk_light\n\n\n\n\n\n\n\n\n\nЗначение признака trnk_light\nКоличество повторений\n\n\n\n\n0\nNo\n682757\n\n\n1\nYes\n1031\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nПроблема встречается настолько редко, что информативность данного признака ставится под вопрос.\n\n\ntrnk_other\nРассмотрим категориальный признак trnk_other, который указывает на наличие других проблем со стволом дерева.\n\n\nShow the code\nexplore_cat_feature(\n    data=dataset,\n    column_name=\"trnk_other\",\n    title=\"Другие проблемы со стволом\",\n    xlabel=\"Количество наблюдений\",\n    ylabel=\"Наличие проблемы\",\n)\n\n\nКоличество уникальных знаний: 2\nКоличество повторов уникальных значений признака trnk_other\n\n\n\n\n\n\n\n\n\nЗначение признака trnk_other\nКоличество повторений\n\n\n\n\n0\nNo\n651215\n\n\n1\nYes\n32573\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nПроблема встречается довольно редко и указана в том числе для пней и мёртвых деревьев.\n\n\nbrch_light\nРассмотрим категориальный признак brch_light, который указывает на наличие проблемы с ветвями, вызванной освещением (обычно гирляндами) или проводами в ветвях.\n\n\nShow the code\nexplore_cat_feature(\n    data=dataset,\n    column_name=\"brch_light\",\n    title=\"Проблемы с ветвями из-за освещения\",\n    xlabel=\"Количество наблюдений\",\n    ylabel=\"Наличие проблемы\",\n)\n\n\nКоличество уникальных знаний: 2\nКоличество повторов уникальных значений признака brch_light\n\n\n\n\n\n\n\n\n\nЗначение признака brch_light\nКоличество повторений\n\n\n\n\n0\nNo\n621423\n\n\n1\nYes\n62365\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nПроблема встречается довольно редко и указана в том числе для пней и мёртвых деревьев.\n\n\nbrch_shoe\nРассмотрим категориальный признак brch_shoe, который указывает на наличие проблемы с ветвями из-за кросовок в них.\n\n\nShow the code\nexplore_cat_feature(\n    data=dataset,\n    column_name=\"brch_shoe\",\n    title=\"Проблемы с ветвями из-за кросовок\",\n    xlabel=\"Количество наблюдений\",\n    ylabel=\"Наличие проблемы\",\n)\n\n\nКоличество уникальных знаний: 2\nКоличество повторов уникальных значений признака brch_shoe\n\n\n\n\n\n\n\n\n\nЗначение признака brch_shoe\nКоличество повторений\n\n\n\n\n0\nNo\n683377\n\n\n1\nYes\n411\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nПроблема встречается настолько редко, что информативность признака ставится под вопрос. Признак не содержит пропусков, а значит указан в том числе и для пней и для мёртвых деревьев.\n\n\nbrch_other\nРассмотрим категориальный признак brch_other, который указывает на наличие других проблем с ветвями.\n\n\nShow the code\nexplore_cat_feature(\n    data=dataset,\n    column_name=\"brch_other\",\n    title=\"Другие проблемы с ветвями\",\n    xlabel=\"Количество наблюдений\",\n    ylabel=\"Наличие проблемы\",\n)\n\n\nКоличество уникальных знаний: 2\nКоличество повторов уникальных значений признака brch_other\n\n\n\n\n\n\n\n\n\nЗначение признака brch_other\nКоличество повторений\n\n\n\n\n0\nNo\n659433\n\n\n1\nYes\n24355\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nПроблемы встречаются довольно редко, признак указан в том числе для пней и мёртвых деревьев.\n\n\nzip_city\nРассмотрим категориальный признак zip_city, который содержит город, полученный из почтового индекса.\n\n\nShow the code\nexplore_cat_feature(\n    data=dataset,\n    column_name=\"zip_city\",\n    title=\"Город, полученный из почтового индекса.\",\n    xlabel=\"Количество наблюдений\",\n    ylabel=\"Город\",\n    figsize=(7, 10),\n)\n\n\nКоличество уникальных знаний: 48\nКоличество повторов уникальных значений признака zip_city\n\n\n\n\n\n\n\n\n\nЗначение признака zip_city\nКоличество повторений\n\n\n\n\n0\nBrooklyn\n177300\n\n\n1\nStaten Island\n105318\n\n\n2\nBronx\n85203\n\n\n3\nNew York\n64488\n\n\n4\nJamaica\n26028\n\n\n5\nFlushing\n23389\n\n\n6\nRidgewood\n10937\n\n\n7\nFresh Meadows\n10441\n\n\n8\nQueens Village\n10127\n\n\n9\nAstoria\n10007\n\n\n10\nWhitestone\n9449\n\n\n11\nBayside\n8679\n\n\n12\nSpringfield Gardens\n7470\n\n\n13\nLittle Neck\n7280\n\n\n14\nForest Hills\n7059\n\n\n15\nOakland Gardens\n7054\n\n\n16\nFar Rockaway\n6887\n\n\n17\nEast Elmhurst\n6475\n\n\n18\nRosedale\n6324\n\n\n19\nWoodside\n5651\n\n\n20\nSouth Ozone Park\n5494\n\n\n21\nOzone Park\n5456\n\n\n22\nBellerose\n5121\n\n\n23\nMiddle Village\n4893\n\n\n24\nSaint Albans\n4697\n\n\n25\nHoward Beach\n4650\n\n\n26\nCorona\n4346\n\n\n27\nElmhurst\n4204\n\n\n28\nGlen Oaks\n4130\n\n\n29\nMaspeth\n4033\n\n\n30\nHollis\n3591\n\n\n31\nRockaway Park\n3572\n\n\n32\nLong Island City\n3479\n\n\n33\nRichmond Hill\n3391\n\n\n34\nJackson Heights\n3295\n\n\n35\nCambria Heights\n3229\n\n\n36\nCollege Point\n3099\n\n\n37\nRego Park\n3084\n\n\n38\nWoodhaven\n2855\n\n\n39\nSouth Richmond Hill\n2805\n\n\n40\nArverne\n2013\n\n\n41\nKew Gardens\n1743\n\n\n42\nSunnyside\n1664\n\n\n43\nFloral Park\n1539\n\n\n44\nCentral Park\n935\n\n\n45\nNew Hyde Park\n865\n\n\n46\nBreezy Point\n30\n\n\n47\nInwood\n9\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nБольшинство записей соответствуют Бруклину.\n\n\nboroname\nРассмотрим категориальный признак boroname, который указывает название района, в котором расположено дерево.\n\n\nShow the code\nexplore_cat_feature(\n    data=dataset,\n    column_name=\"boroname\",\n    title=\"Название района\",\n    xlabel=\"Количество наблюдений\",\n    ylabel=\"Название района\",\n)\n\n\nКоличество уникальных знаний: 5\nКоличество повторов уникальных значений признака boroname\n\n\n\n\n\n\n\n\n\nЗначение признака boroname\nКоличество повторений\n\n\n\n\n0\nQueens\n250551\n\n\n1\nBrooklyn\n177293\n\n\n2\nStaten Island\n105318\n\n\n3\nBronx\n85203\n\n\n4\nManhattan\n65423\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nБольшинство деревьев раcположены в районе Queens.\n\n\ncb_num\nРассмотрим категориальный признак cb_num.\n\n\nShow the code\nexplore_cat_feature(\n    data=dataset,\n    column_name=\"cb_num\",\n    title=\"cb_num\",\n    xlabel=\"Количество наблюдений\",\n    figsize=(7, 10),\n)\n\n\nКоличество уникальных знаний: 59\nКоличество повторов уникальных значений признака cb_num\n\n\n\n\n\n\n\n\n\nЗначение признака cb_num\nКоличество повторений\n\n\n\n\n0\n503\n53934\n\n\n1\n413\n37017\n\n\n2\n407\n30620\n\n\n3\n411\n28071\n\n\n4\n412\n26379\n\n\n5\n502\n25717\n\n\n6\n501\n25667\n\n\n7\n408\n20383\n\n\n8\n405\n19550\n\n\n9\n318\n19319\n\n\n10\n305\n16589\n\n\n11\n410\n15224\n\n\n12\n315\n13758\n\n\n13\n401\n13008\n\n\n14\n312\n12500\n\n\n15\n414\n12412\n\n\n16\n301\n12066\n\n\n17\n409\n11481\n\n\n18\n210\n11180\n\n\n19\n212\n11108\n\n\n20\n403\n10827\n\n\n21\n310\n10598\n\n\n22\n314\n10536\n\n\n23\n306\n10290\n\n\n24\n406\n10258\n\n\n25\n211\n10094\n\n\n26\n209\n9943\n\n\n27\n303\n9437\n\n\n28\n311\n9343\n\n\n29\n108\n9269\n\n\n30\n107\n8814\n\n\n31\n302\n8789\n\n\n32\n402\n8645\n\n\n33\n317\n8418\n\n\n34\n307\n8105\n\n\n35\n112\n7182\n\n\n36\n304\n7164\n\n\n37\n404\n6676\n\n\n38\n204\n6643\n\n\n39\n208\n6071\n\n\n40\n110\n5962\n\n\n41\n308\n5735\n\n\n42\n207\n5406\n\n\n43\n309\n5333\n\n\n44\n316\n5275\n\n\n45\n206\n5192\n\n\n46\n106\n5061\n\n\n47\n102\n5019\n\n\n48\n202\n5016\n\n\n49\n109\n4987\n\n\n50\n103\n4939\n\n\n51\n111\n4933\n\n\n52\n203\n4911\n\n\n53\n201\n4826\n\n\n54\n205\n4813\n\n\n55\n104\n4704\n\n\n56\n313\n4038\n\n\n57\n101\n2397\n\n\n58\n105\n2156\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nborocode\nРассмотрим категориальный признак borocode, содержащий код района, в котором расположено дерево: - 1 - (Манхэттен), - 2 - (Бронкс), - 3 - (Бруклин), - 4 - (Куинс), - 5 - (Стейтен-Айленд).\n\n\nShow the code\nexplore_cat_feature(\n    data=dataset,\n    column_name=\"borocode\",\n    title=\"Код района\",\n    xlabel=\"Количество наблюдений\",\n    ylabel=\"Код\",\n)\n\n\nКоличество уникальных знаний: 5\nКоличество повторов уникальных значений признака borocode\n\n\n\n\n\n\n\n\n\nЗначение признака borocode\nКоличество повторений\n\n\n\n\n0\n4\n250551\n\n\n1\n3\n177293\n\n\n2\n5\n105318\n\n\n3\n2\n85203\n\n\n4\n1\n65423\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nПризнак является закодированным признаком boroname.\n\n\ncncldist\nРассмотрим категориальный признак cncldist, содержащий муниципальный округ, в котором находится дерево.\n\n\nShow the code\nexplore_cat_feature(\n    data=dataset,\n    column_name=\"cncldist\",\n    title=\"Муниципальный округ\",\n    xlabel=\"Количество наблюдений\",\n    ylabel=\"Округ\",\n    figsize=(7, 10),\n)\n\n\nКоличество уникальных знаний: 51\nКоличество повторов уникальных значений признака cncldist\n\n\n\n\n\n\n\n\n\nЗначение признака cncldist\nКоличество повторений\n\n\n\n\n0\n51\n51236\n\n\n1\n19\n34429\n\n\n2\n50\n33035\n\n\n3\n23\n30743\n\n\n4\n31\n23161\n\n\n5\n49\n21047\n\n\n6\n27\n20116\n\n\n7\n32\n19508\n\n\n8\n24\n18993\n\n\n9\n30\n18551\n\n\n10\n13\n17587\n\n\n11\n46\n16913\n\n\n12\n28\n15807\n\n\n13\n20\n14189\n\n\n14\n29\n13946\n\n\n15\n39\n13859\n\n\n16\n43\n13196\n\n\n17\n42\n13117\n\n\n18\n33\n12784\n\n\n19\n17\n11851\n\n\n20\n48\n11786\n\n\n21\n45\n11758\n\n\n22\n44\n11659\n\n\n23\n22\n11537\n\n\n24\n37\n10990\n\n\n25\n34\n10812\n\n\n26\n12\n10734\n\n\n27\n26\n10679\n\n\n28\n35\n10525\n\n\n29\n11\n9820\n\n\n30\n18\n9798\n\n\n31\n38\n9567\n\n\n32\n47\n9259\n\n\n33\n36\n9023\n\n\n34\n3\n8631\n\n\n35\n4\n8521\n\n\n36\n41\n8232\n\n\n37\n9\n8213\n\n\n38\n6\n8050\n\n\n39\n15\n8044\n\n\n40\n21\n8016\n\n\n41\n25\n7851\n\n\n42\n8\n7293\n\n\n43\n40\n6838\n\n\n44\n7\n6572\n\n\n45\n16\n6531\n\n\n46\n10\n6501\n\n\n47\n14\n6240\n\n\n48\n1\n5694\n\n\n49\n2\n5564\n\n\n50\n5\n4982\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nБольшинство деревьев расположены в округе 51.\n\n\nst_senate\nРассмотрим категориальный признак st_senate, содержащий район Сената штата, в котором находится дерево.\n\n\nShow the code\nexplore_cat_feature(\n    data=dataset,\n    column_name=\"st_senate\",\n    title=\"Район Сената штата\",\n    xlabel=\"Количество наблюдений\",\n    ylabel=\"Район\",\n    figsize=(7, 10),\n)\n\n\nКоличество уникальных знаний: 26\nКоличество повторов уникальных значений признака st_senate\n\n\n\n\n\n\n\n\n\nЗначение признака st_senate\nКоличество повторений\n\n\n\n\n0\n24\n87241\n\n\n1\n11\n67705\n\n\n2\n15\n44624\n\n\n3\n14\n38351\n\n\n4\n10\n35044\n\n\n5\n34\n31066\n\n\n6\n19\n29083\n\n\n7\n22\n27179\n\n\n8\n23\n25401\n\n\n9\n16\n24146\n\n\n10\n25\n23499\n\n\n11\n17\n22225\n\n\n12\n12\n21847\n\n\n13\n21\n20730\n\n\n14\n18\n20603\n\n\n15\n13\n18827\n\n\n16\n20\n16848\n\n\n17\n26\n16456\n\n\n18\n32\n15915\n\n\n19\n36\n14544\n\n\n20\n33\n14462\n\n\n21\n29\n14285\n\n\n22\n30\n13929\n\n\n23\n27\n13685\n\n\n24\n28\n13195\n\n\n25\n31\n12898\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nБольшинство наблюдений соответствуют району Сената штата с номером 24.\n\n\ncouncil_district\nРассмотрим категориальный признак council_district, содержащий муниципальный округ, в котором находится дерево.\n\n\nShow the code\nexplore_cat_feature(\n    data=dataset,\n    column_name=\"council_district\",\n    title=\"Муниципальный округ\",\n    xlabel=\"Количество наблюдений\",\n    ylabel=\"Муниципальный округ\",\n    figsize=(7, 10),\n)\n\n\nКоличество уникальных знаний: 51\nКоличество повторов уникальных значений признака council_district\n\n\n\n\n\n\n\n\n\nЗначение признака council_district\nКоличество повторений\n\n\n\n\n0\n51.0\n50865\n\n\n1\n19.0\n33626\n\n\n2\n50.0\n32948\n\n\n3\n23.0\n30411\n\n\n4\n31.0\n22763\n\n\n5\n49.0\n20863\n\n\n6\n27.0\n20061\n\n\n7\n32.0\n19687\n\n\n8\n24.0\n18620\n\n\n9\n30.0\n18307\n\n\n10\n13.0\n17433\n\n\n11\n46.0\n16863\n\n\n12\n28.0\n15635\n\n\n13\n20.0\n14128\n\n\n14\n39.0\n13837\n\n\n15\n29.0\n13789\n\n\n16\n42.0\n13083\n\n\n17\n43.0\n13054\n\n\n18\n33.0\n12740\n\n\n19\n17.0\n11825\n\n\n20\n48.0\n11802\n\n\n21\n45.0\n11717\n\n\n22\n44.0\n11648\n\n\n23\n22.0\n11640\n\n\n24\n37.0\n10995\n\n\n25\n34.0\n10700\n\n\n26\n26.0\n10659\n\n\n27\n12.0\n10525\n\n\n28\n35.0\n10497\n\n\n29\n18.0\n9702\n\n\n30\n11.0\n9655\n\n\n31\n38.0\n9510\n\n\n32\n47.0\n9200\n\n\n33\n36.0\n9025\n\n\n34\n4.0\n8649\n\n\n35\n3.0\n8506\n\n\n36\n41.0\n8207\n\n\n37\n9.0\n7994\n\n\n38\n15.0\n7921\n\n\n39\n25.0\n7831\n\n\n40\n21.0\n7810\n\n\n41\n8.0\n7343\n\n\n42\n6.0\n6947\n\n\n43\n40.0\n6866\n\n\n44\nNaN\n6519\n\n\n45\n7.0\n6519\n\n\n46\n16.0\n6495\n\n\n47\n14.0\n6359\n\n\n48\n10.0\n6137\n\n\n49\n2.0\n5537\n\n\n50\n1.0\n5404\n\n\n51\n5.0\n4931\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nБольшинство деревьев относится к муниципальному округу с номером 51.\nПризнак содержит небольшое количество пропусков, что может быть связано как с ошибками в данных, так и с особенностями административно-территорального деления в США.\n\n\nspc_latin\nРассмотрим категориальный признак spc_latin, содержащий название вида дерева на латыни. Признак обладает высокой кардинальностью, поэтому выведем 50 наиболее часто встречающихся значений.\n\n\nShow the code\nexplore_cat_feature(\n    data=dataset,\n    column_name=\"spc_latin\",\n    n_top=50,\n    title=\"Виды деревьев\",\n    xlabel=\"Количество наблюдений\",\n    ylabel=\"Латинское название вида\",\n    figsize=(7, 10),\n)\n\n\nКоличество уникальных знаний: 132\nКоличество повторов уникальных значений признака spc_latin\n\n\n\n\n\n\n\n\n\nЗначение признака spc_latin\nКоличество повторений\n\n\n\n\n0\nPlatanus x acerifolia\n87014\n\n\n1\nGleditsia triacanthos var. inermis\n64264\n\n\n2\nPyrus calleryana\n58931\n\n\n3\nQuercus palustris\n53185\n\n\n4\nAcer platanoides\n34189\n\n\n5\nTilia cordata\n29742\n\n\n6\nPrunus\n29279\n\n\n7\nZelkova serrata\n29258\n\n\n8\nGinkgo biloba\n21024\n\n\n9\nStyphnolobium japonicum\n19338\n\n\n10\nAcer rubrum\n17246\n\n\n11\nFraxinus pennsylvanica\n16251\n\n\n12\nTilia americana\n13530\n\n\n13\nAcer saccharinum\n12277\n\n\n14\nLiquidambar styraciflua\n10657\n\n\n15\nQuercus rubra\n8400\n\n\n16\nTilia tomentosa\n7995\n\n\n17\nUlmus americana\n7975\n\n\n18\nAcer\n7080\n\n\n19\nPrunus cerasifera\n6879\n\n\n20\nQuercus bicolor\n6598\n\n\n21\nAcer platanoides 'Crimson King'\n5923\n\n\n22\nUlmus parvifolia\n5345\n\n\n23\nPrunus virginiana\n4888\n\n\n24\nSyringa reticulata\n4568\n\n\n25\nCercis canadensis\n3801\n\n\n26\nKoelreuteria paniculata\n3719\n\n\n27\nMalus\n3527\n\n\n28\nGymnocladus dioicus\n3364\n\n\n29\nQuercus phellos\n3184\n\n\n30\nMetasequoia glyptostroboides\n3020\n\n\n31\nCrataegus\n2988\n\n\n32\nAcer saccharum\n2844\n\n\n33\nAcer pseudoplatanus\n2731\n\n\n34\nFraxinus\n2609\n\n\n35\nAcer campestre\n2550\n\n\n36\nCeltis occidentalis\n2382\n\n\n37\nQuercus acutissima\n2244\n\n\n38\nMaackia amurensis\n2197\n\n\n39\nCarpinus betulus\n2099\n\n\n40\nAcer ginnala\n2049\n\n\n41\nAmelanchier\n2032\n\n\n42\nRobinia pseudoacacia\n1784\n\n\n43\nQuercus alba\n1686\n\n\n44\nQuercus robur\n1644\n\n\n45\nUlmus pumila\n1595\n\n\n46\nCornus florida\n1552\n\n\n47\nCarpinus caroliniana\n1517\n\n\n48\nQuercus shumardii\n1487\n\n\n49\nQuercus coccinea\n1465\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nЧаще всех встречаются деревья вида Platanus x acerifolia (плантан кленолистный).\n\n\nspc_common\nРассмотрим категориальный признак spc_common, содержащий обывательское название вида дерева. Признак обладает высокой кардинальностью, поэтому выведем 50 наиболее часто встречающихся значений.\n\n\nShow the code\nexplore_cat_feature(\n    data=dataset,\n    column_name=\"spc_common\",\n    n_top=50,\n    title=\"Виды деревьев\",\n    xlabel=\"Количество наблюдений\",\n    ylabel=\"Обывательское название\",\n    figsize=(7, 10),\n)\n\n\nКоличество уникальных знаний: 132\nКоличество повторов уникальных значений признака spc_common\n\n\n\n\n\n\n\n\n\nЗначение признака spc_common\nКоличество повторений\n\n\n\n\n0\nLondon planetree\n87014\n\n\n1\nhoneylocust\n64264\n\n\n2\nCallery pear\n58931\n\n\n3\npin oak\n53185\n\n\n4\nNorway maple\n34189\n\n\n5\nlittleleaf linden\n29742\n\n\n6\ncherry\n29279\n\n\n7\nJapanese zelkova\n29258\n\n\n8\nginkgo\n21024\n\n\n9\nSophora\n19338\n\n\n10\nred maple\n17246\n\n\n11\ngreen ash\n16251\n\n\n12\nAmerican linden\n13530\n\n\n13\nsilver maple\n12277\n\n\n14\nsweetgum\n10657\n\n\n15\nnorthern red oak\n8400\n\n\n16\nsilver linden\n7995\n\n\n17\nAmerican elm\n7975\n\n\n18\nmaple\n7080\n\n\n19\npurple-leaf plum\n6879\n\n\n20\nswamp white oak\n6598\n\n\n21\ncrimson king maple\n5923\n\n\n22\nChinese elm\n5345\n\n\n23\n'Schubert' chokecherry\n4888\n\n\n24\nJapanese tree lilac\n4568\n\n\n25\neastern redbud\n3801\n\n\n26\ngolden raintree\n3719\n\n\n27\ncrab apple\n3527\n\n\n28\nKentucky coffeetree\n3364\n\n\n29\nwillow oak\n3184\n\n\n30\ndawn redwood\n3020\n\n\n31\nhawthorn\n2988\n\n\n32\nsugar maple\n2844\n\n\n33\nsycamore maple\n2731\n\n\n34\nash\n2609\n\n\n35\nhedge maple\n2550\n\n\n36\ncommon hackberry\n2382\n\n\n37\nsawtooth oak\n2244\n\n\n38\nAmur maackia\n2197\n\n\n39\nEuropean hornbeam\n2099\n\n\n40\nAmur maple\n2049\n\n\n41\nserviceberry\n2032\n\n\n42\nblack locust\n1784\n\n\n43\nwhite oak\n1686\n\n\n44\nEnglish oak\n1644\n\n\n45\nSiberian elm\n1595\n\n\n46\nflowering dogwood\n1552\n\n\n47\nAmerican hornbeam\n1517\n\n\n48\nSchumard's oak\n1487\n\n\n49\nscarlet oak\n1465\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nНа первом месте всё также плантан кленолистный.\n\n\nproblems\nРассмотрим категориальный признак problems, содержащий информацию о проблемах с деревом. Признак обладает высокой кардинальностью, поэтому выведем 50 наиболее часто встречающихся значений и, на всякий случай, подсчитаем количество пропусков.\n\n\nShow the code\nprint(\n    \"Количество пропусков в столбце в полных данных: \"\n    f\"{dataset.problems.isna().sum()}\\n\"\n)\n\nexplore_cat_feature(\n    data=dataset,\n    column_name=\"problems\",\n    n_top=50,\n    title=\"Проблемы деревьев\",\n    xlabel=\"Количество наблюдений\",\n    ylabel=\"Проблема\",\n    figsize=(7, 10),\n)\n\n\nКоличество пропусков в столбце в полных данных: 31664\n\nКоличество уникальных знаний: 232\nКоличество повторов уникальных значений признака problems\n\n\n\n\n\n\n\n\n\nЗначение признака problems\nКоличество повторений\n\n\n\n\n0\nNone\n426280\n\n\n1\nStones\n95673\n\n\n2\nBranchLights\n29452\n\n\n3\nStones,BranchLights\n17808\n\n\n4\nRootOther\n11418\n\n\n5\nTrunkOther\n11143\n\n\n6\nBranchOther\n8352\n\n\n7\nStones,TrunkOther\n5183\n\n\n8\nStones,RootOther\n4468\n\n\n9\nWiresRope\n4095\n\n\n10\nStones,BranchOther\n3786\n\n\n11\nTrunkOther,BranchOther\n2477\n\n\n12\nWiresRope,BranchLights\n2308\n\n\n13\nRootOther,TrunkOther\n2137\n\n\n14\nMetalGrates\n2098\n\n\n15\nStones,WiresRope,BranchLights\n1953\n\n\n16\nRootOther,BranchLights\n1918\n\n\n17\nRootOther,TrunkOther,BranchOther\n1807\n\n\n18\nTrunkOther,BranchLights\n1558\n\n\n19\nStones,TrunkOther,BranchOther\n1539\n\n\n20\nRootOther,BranchOther\n1503\n\n\n21\nStones,WiresRope\n1457\n\n\n22\nStones,RootOther,TrunkOther\n1360\n\n\n23\nStones,TrunkOther,BranchLights\n1176\n\n\n24\nStones,RootOther,BranchLights\n901\n\n\n25\nBranchLights,BranchOther\n756\n\n\n26\nStones,RootOther,BranchOther\n743\n\n\n27\nStones,RootOther,TrunkOther,BranchOther\n617\n\n\n28\nRootOther,TrunkOther,BranchLights\n540\n\n\n29\nStones,BranchLights,BranchOther\n526\n\n\n30\nStones,RootOther,TrunkOther,BranchLights\n495\n\n\n31\nRootOther,WiresRope,BranchLights\n410\n\n\n32\nWiresRope,TrunkOther\n325\n\n\n33\nRootOther,WiresRope\n324\n\n\n34\nWiresRope,BranchOther\n314\n\n\n35\nStones,WiresRope,TrunkOther,BranchLights\n256\n\n\n36\nTrunkLights,BranchLights\n235\n\n\n37\nTrunkLights\n218\n\n\n38\nMetalGrates,TrunkOther\n218\n\n\n39\nWiresRope,TrunkOther,BranchLights\n210\n\n\n40\nMetalGrates,BranchOther\n208\n\n\n41\nStones,MetalGrates\n207\n\n\n42\nStones,RootOther,WiresRope,BranchLights\n202\n\n\n43\nMetalGrates,RootOther\n159\n\n\n44\nStones,TrunkOther,BranchLights,BranchOther\n156\n\n\n45\nTrunkOther,BranchLights,BranchOther\n154\n\n\n46\nRootOther,BranchLights,BranchOther\n126\n\n\n47\nStones,RootOther,WiresRope\n124\n\n\n48\nStones,RootOther,BranchLights,BranchOther\n113\n\n\n49\nMetalGrates,TrunkOther,BranchOther\n110\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nПризнак содержит записи как об отдельных проблемах, так и об их комбинациях, перечисленных через запятую. Интересно, что признак также содержит пропуски.\nЧаще всего деревья либо не имеют никаких проблем, либо имеют проблемы с камнями и осветительными приборами в ветвях. Закономерно, комбинации проблем встречаются значительно реже.\nЧтобы понять какие отдельные проблемы встречаются чаще всего исключим из датасета деревья не имеющие проблем и записи, содержащие пропуски в данном столбце, разделим все комбинации проблем на отдельные проблемы и сосчитаем как часто они встречаются.\n\n\nShow the code\ntrees_problems = (\n    dataset.query(\"problems != 'None' and problems.notna()\")\n    .set_index(keys=[\"tree_id\", \"problems\"], drop=False)\n    .drop(columns=\"tree_id\")\n    .problems.str.split(\",\")\n    .explode()\n    .rename_axis(index={\"problems\": \"problems_str\"})\n    .reset_index()\n)\n\nexplore_cat_feature(\n    data=trees_problems,\n    column_name=\"problems\",\n    title=\"Частота отдельных проблем деревьев\",\n    xlabel=\"Количество наблюдений\",\n    ylabel=\"Проблема\",\n    figsize=(10, 5),\n)\n\n\nКоличество уникальных знаний: 9\nКоличество повторов уникальных значений признака problems\n\n\n\n\n\n\n\n\n\nЗначение признака problems\nКоличество повторений\n\n\n\n\n0\nStones\n139999\n\n\n1\nBranchLights\n62365\n\n\n2\nTrunkOther\n32573\n\n\n3\nRootOther\n30322\n\n\n4\nBranchOther\n24355\n\n\n5\nWiresRope\n13274\n\n\n6\nMetalGrates\n3536\n\n\n7\nTrunkLights\n1031\n\n\n8\nSneakers\n411\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nПодсчитаем количество отдельных проблем у одного дерева, для этого создадим признак problems_count и выясним как часто встречается разное количество проблем у одного дерева.\n\n\nShow the code\nexplore_cat_feature(\n    data=(\n        trees_problems.assign(\n            problems_count=lambda x: trees_problems.groupby(\n                by=[\"tree_id\", \"problems_str\"]\n            ).problems.transform(\"count\")\n        )\n    ),\n    column_name=\"problems_count\",\n    title=\"Количество отдельных проблем у одного дерева\",\n    xlabel=\"Количество наблюдений\",\n    ylabel=\"Количество отдельных проблем\",\n    figsize=(10, 5),\n)\n\n\nКоличество уникальных знаний: 9\nКоличество повторов уникальных значений признака problems_count\n\n\n\n\n\n\n\n\n\nЗначение признака problems_count\nКоличество повторений\n\n\n\n\n0\n1\n162552\n\n\n1\n2\n95500\n\n\n2\n3\n38148\n\n\n3\n4\n10096\n\n\n4\n5\n1245\n\n\n5\n6\n294\n\n\n6\n7\n14\n\n\n7\n9\n9\n\n\n8\n8\n8\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nЧаще всего одно дерево имеет 1 - 2 отдельные проблемы, при этом, максимальное количество проблем равно 9.\nПопробуем выяснить какие проблемы деревьев встречаются вместе. Будем рассматривать отдельные пары проблем.\n\n\nShow the code\nexplore_cat_vs_cat(\n    data=(\n        trees_problems.merge(\n            pd.Series(\n                trees_problems[\"problems\"].unique(), name=\"base_problems\"\n            ),\n            how=\"cross\",\n        )\n        .rename(columns={\"problems\": \"actual_problems\"})\n        .assign(\n            presented=(\n                lambda df: df.apply(\n                    lambda row: (\n                        row.base_problems in row.problems_str\n                        and row.actual_problems in row.problems_str\n                    ),\n                    axis=\"columns\",\n                )\n            )\n        )\n        .query(\"presented == True\")\n    ),\n    x=\"base_problems\",\n    y=\"actual_problems\",\n    title=\"Совстречаемость проблем деревьев\",\n    xlabel=\"Проблема\",\n    ylabel=\"Проблема\",\n    figsize=(16, 16),\n    norm=matplotlib.colors.LogNorm(),\n    alpha=0.5,\n)\n\n\nСовстречаемость проблем деревьев\n\n\n\n\n\n\n\nactual_problems\nBranchLights\nBranchOther\nMetalGrates\nRootOther\nSneakers\nStones\nTrunkLights\nTrunkOther\nWiresRope\n\n\nbase_problems\n \n \n \n \n \n \n \n \n \n\n\n\n\nBranchLights\n62365\n2331\n162\n5131\n84\n24118\n577\n5035\n5971\n\n\nBranchOther\n2331\n24355\n484\n5375\n53\n7983\n97\n7380\n1026\n\n\nMetalGrates\n162\n484\n3536\n390\n7\n426\n73\n551\n117\n\n\nRootOther\n5131\n5375\n390\n30322\n51\n9381\n145\n7560\n1563\n\n\nSneakers\n84\n53\n7\n51\n411\n201\n4\n70\n18\n\n\nStones\n24118\n7983\n426\n9381\n201\n139999\n296\n11293\n4644\n\n\nTrunkLights\n577\n97\n73\n145\n4\n296\n1031\n107\n195\n\n\nTrunkOther\n5035\n7380\n551\n7560\n70\n11293\n107\n32573\n1474\n\n\nWiresRope\n5971\n1026\n117\n1563\n18\n4644\n195\n1474\n13274\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nОчевидно, разные пары проблем встречаются с разной частотой. Реже всех встречаются проблемы с кросовками и осветительными приборами на стволе. Чаще всех - проблемы только с камнями и проблемы только с осветительными приборами в ветвях и комбинация этих проблем. Реже всех встречаются проблемы с кросовками и комбинации этих проблем с другими. Примечательно, что в комбинациях присутствует каждая пара проблем и нет взаимоисключающих категорий.\n\n\n\n\nИсследование признаков в парах\n\nМатрица корреляции для количественных признаков\nК количественным признакам относятся следующие: - tree_dbh; - stump_diam; - latitude; - longitude; - x_sp; - y_sp; - bin; - bbl.\nПостроим для них матрицу корреляции. Так как количественные признаки содержат выбросы, будем использовать коэффициент корреляции Кендалла.\n\n\nShow the code\nplot_corr_matrix(\n    dataset[\n        [\n            \"tree_dbh\",\n            \"stump_diam\",\n            \"latitude\",\n            \"longitude\",\n            \"x_sp\",\n            \"y_sp\",\n            \"bin\",\n            \"bbl\",\n        ]\n    ],\n    method=\"kendall\",\n)\n\n\n\n\n\n\n\n\n\nПары признаков latitude и y_sp, longitude и x_sp, bin и bbl показывают очень высокую корреляцию, скорее всего величины в этих парах связаны некоторой зависимостью. Для пар latitude и y_sp, longitude и x_sp такая высокая корреляция логична, так как это широта и долгота в разных системах координат. Причина высокой корреляции между bin и bbl остаётся загадкой, так как автору не известен физический смысл этих величин. Тем не менее достаточно будет рассмотреть по одному признаку из каждой пары.\n\n\nПары категориальных признаков\n\nspc_latin и spc_common\nПроверим нет ли ошибок в сопоставлении обывательского названия вида дерева с его названием на латыне. Для этого посчитаем какое максимальное количество названий на латыне соответствует каждому обывательскому названию и наоборот.\n\n\nShow the code\nprint(\n    \"Максимальное количество уникальных названий вида дерева\",\n    \"на латыне для каждого обывательского названия:\",\n    dataset.groupby(\"spc_common\").spc_latin.nunique().max(),\n)\n\nprint(\n    \"Максимальное количество уникальных обывательских названий\",\n    \"вида дерева для каждого названия на латыне:\",\n    dataset.groupby(\"spc_latin\").spc_common.nunique().max(),\n)\n\n\nМаксимальное количество уникальных названий вида дерева на латыне для каждого обывательского названия: 1\nМаксимальное количество уникальных обывательских названий вида дерева для каждого названия на латыне: 1\n\n\nТаким образом, каждому уникальному названию дерева на латыне соответствует только одно уникальное обывательское название. Скорее всего, названия видов деревьев сопоставлены корректно, но не исключено, что для отдельных деревьев некорректно указано как название вида на латыне так и соответствующее обывательское название.\n\n\nСовстречаемость проблем\nПопробуем выяснить какие проблемы деревьев встречаются одновременно, для этого построим график, называемый Parallel Categories Diagram, из библиотеки Plotly для трёх наиболее часто встречающихся проблем, которым соответствуют значения Yes в следующих признаках:\n\nroot_stone,\nbrch_light,\ntrnk_other.\n\n\n\nShow the code\ncols = [\n    \"root_stone\",\n    \"brch_light\",\n    \"trnk_other\",\n]\n\nfig = px.parallel_categories(\n    data_frame=(\n        dataset.loc[:, cols].assign(\n            log10_count=np.log10(\n                dataset.groupby(by=cols)[\"tree_id\"].transform(\"count\")\n            )\n        )\n    ),\n    dimensions=cols,\n    color=\"log10_count\",\n    color_continuous_scale=\"greens_r\",\n    range_color=[3, 6],\n)\n\nfig.update_layout(\n    title=\"Совстречаемость трёх наиболее распространённых проблем\",\n    title_x=0.5,\n)\n\nfig.show()"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Сайт содержит результаты исследовательского анализа датасета 2015 Street Tree Census - Tree Data (https://data.cityofnewyork.us/Environment/2015-Street-Tree-Census-Tree-Data/uvpi-gqnh/about_data) и визуализацию геоданных.\nПроект создан для домашнего задания курса MLOps и production в DS исследованиях 3.0.\n\n\n\n\n\n\nРепозиторий проекта\n\n\n\nПодробнее о проекте можно узнать в репозитории проекта на GitHub\n\n\n\n\n\n\n\n\nCaution\n\n\n\nПроект и документация в стадии разработки."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "NY Tree Census EDA",
    "section": "",
    "text": "Сайт посвящён исследованию датасета 2015 Street Tree Census - Tree Data"
  },
  {
    "objectID": "index.html#street-tree-census",
    "href": "index.html#street-tree-census",
    "title": "NY Tree Census EDA",
    "section": "2015 Street Tree Census",
    "text": "2015 Street Tree Census\nДатасет содержит информацию о деревьях, растущих на улицах Нью-Йорка, собранную в рамках проекта 2015 Street Tree Census волонтёрами и сотрудниками NYC Parks & Recreation и партнёрских организаций.\nСобранные данные включают в себя информацию о видах деревьев, диаметре ствола и оценку здоровья растения. Доступны сопроводительные данные, показывающие статус сбора и публикации данных по всему городу.\nПодробнее о датасете можно узнать на его сайте.\nЦель проекта - выполнить исследовательский анализ данных и отработать следующие приёмы:\n\n✔️ визуализация сложных данных,\n✔️ сборка Docker-образов,\n✔️ работа с CI/CD конвейерами,\n✔️ работа с документацией - сборка и публикация с quarto и GitHub Pages,\n❗ сборка и публикация артефактов исследования.\n\nИсследовательский анализ данных содержит следующие пункты:\n\nпревью данных - таблица с небольшой выборкой из датасета,\nоценка количества пропусков в столбцах с помощью библиотеки missingno,\nдиаграмма попарного распределения признаков,\nматрица попарной корреляции между вещественными признаками,\nкарта расположения деревьев из датасета\nи другие разделы."
  }
]